{"ast":null,"code":"var _jsxFileName = \"D:\\\\Helena\\\\IT\\\\React\\\\ReactKurzComplete\\\\authentication\\\\authentication\\\\01-starting-project\\\\src\\\\components\\\\Auth\\\\AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useContext } from \"react\";\nimport { AuthContext } from \"../../store/auth-context\";\nimport { useNavigate } from 'react-router-dom';\nimport classes from \"./AuthForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  const [isLogin, setIsLogin] = useState(true);\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n  const authCtx = useContext(AuthContext);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value; // optimal: validation - napr. ze to neni prazdne a ze ma heslo vice nez 7 znaku.\n\n    setIsLoading(true);\n    let url; // https://firebase.google.com/docs/reference/rest/auth - odsud vezmeme to url.\n\n    if (isLogin) {\n      // tohle je general code (pro: Sign IN with email / password): https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=[API_KEY]\n      url = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCfsJzs1I0jGRRPaeZaqOZPaoVGsHngqxc\";\n    } else {\n      // tohle je general code (pro: Sign UP with email / password). musime tam pridat vlastni API key: https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=[API_KEY]\n      // ten ziskame v project overview => projest settings => web api key\n      url = \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCfsJzs1I0jGRRPaeZaqOZPaoVGsHngqxc\";\n    }\n\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        // request body payload je tam taky popsany. a je pro sing in i sign up stejny.\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      setIsLoading(false);\n\n      if (res.ok) {\n        return res.json();\n      } else {\n        return res.json().then(data => {\n          //console.log(data)\n          // napr. kdyz pri sign upovani (tedy vytvareni noveho uctu) zadame jen ctyrmistne heslo,\n          // tak se v konzoli zobrazi error => weak password. password should be at least 6 characters long.\n          let errorMessage = \"Authentication failed!\";\n\n          if (data && data.error && data.error.message) {\n            errorMessage = data.error.message;\n          }\n\n          throw new Error(errorMessage);\n        });\n      }\n    }).then(data => {\n      // here we will end-up when it is successful.\n      //console.log(data) // vypise se nam objekt, kde bude mimo jine idToken.\n      // ten idToken ted potrebujeme ulozit nekde, kde k nemu budeme mit pristup z ruznych mist aplikace => context nebo Redux => volime context,\n      // tzn nemusime instalovat dalsi package a login state se nemeni tak casto, tzn nebudeme mit performance issues.\n      authCtx.login(data.idToken); // v tomto pripade chceme redirectovat\n\n      navigate('/');\n    }).catch(err => {\n      alert(err.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? \"Login\" : \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          ref: emailInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          required: true,\n          ref: passwordInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [!isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? \"Login\" : \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Sending request...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? \"Create new account\" : \"Login with existing account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthForm, \"1gAvJ8AA5xeWompy49rJ31zj7ro=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["D:/Helena/IT/React/ReactKurzComplete/authentication/authentication/01-starting-project/src/components/Auth/AuthForm.js"],"names":["useState","useRef","useContext","AuthContext","useNavigate","classes","AuthForm","isLogin","setIsLogin","emailInputRef","passwordInputRef","isLoading","setIsLoading","navigate","authCtx","switchAuthModeHandler","prevState","submitHandler","event","preventDefault","enteredEmail","current","value","enteredPassword","url","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","res","ok","json","data","errorMessage","error","message","Error","login","idToken","catch","err","alert","auth","control","actions","toggle"],"mappings":"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","sourcesContent":["import { useState, useRef, useContext } from \"react\";\nimport { AuthContext } from \"../../store/auth-context\";\nimport {useNavigate} from 'react-router-dom';\n\nimport classes from \"./AuthForm.module.css\";\n\nconst AuthForm = () => {\n  const [isLogin, setIsLogin] = useState(true);\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const navigate=useNavigate();\n\n  const authCtx = useContext(AuthContext);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n    // optimal: validation - napr. ze to neni prazdne a ze ma heslo vice nez 7 znaku.\n\n    setIsLoading(true);\n    let url;\n\n    // https://firebase.google.com/docs/reference/rest/auth - odsud vezmeme to url.\n    if (isLogin) {\n      // tohle je general code (pro: Sign IN with email / password): https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=[API_KEY]\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCfsJzs1I0jGRRPaeZaqOZPaoVGsHngqxc\";\n    } else {\n      // tohle je general code (pro: Sign UP with email / password). musime tam pridat vlastni API key: https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=[API_KEY]\n      // ten ziskame v project overview => projest settings => web api key\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCfsJzs1I0jGRRPaeZaqOZPaoVGsHngqxc\";\n    }\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        // request body payload je tam taky popsany. a je pro sing in i sign up stejny.\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true,\n      }),\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((res) => {\n        setIsLoading(false);\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then((data) => {\n            //console.log(data)\n            // napr. kdyz pri sign upovani (tedy vytvareni noveho uctu) zadame jen ctyrmistne heslo,\n            // tak se v konzoli zobrazi error => weak password. password should be at least 6 characters long.\n            let errorMessage = \"Authentication failed!\";\n            if (data && data.error && data.error.message) {\n              errorMessage = data.error.message;\n            }\n            throw new Error(errorMessage);\n          });\n        }\n      })\n      .then((data) => {\n        // here we will end-up when it is successful.\n        //console.log(data) // vypise se nam objekt, kde bude mimo jine idToken.\n        // ten idToken ted potrebujeme ulozit nekde, kde k nemu budeme mit pristup z ruznych mist aplikace => context nebo Redux => volime context,\n        // tzn nemusime instalovat dalsi package a login state se nemeni tak casto, tzn nebudeme mit performance issues.\n        authCtx.login(data.idToken);\n        // v tomto pripade chceme redirectovat\n        navigate('/');\n      })\n      .catch((err) => {\n        alert(err.message);\n      });\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input type=\"email\" id=\"email\" required ref={emailInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            required\n            ref={passwordInputRef}\n          />\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && (\n            <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\n          )}\n          {isLoading && <p>Sending request...</p>}\n          <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n"]},"metadata":{},"sourceType":"module"}