{"ast":null,"code":"var _jsxFileName = \"D:\\\\Helena\\\\IT\\\\React\\\\ReactKurzComplete\\\\authentication\\\\authentication\\\\01-starting-project\\\\src\\\\components\\\\Auth\\\\AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from \"react\";\nimport classes from \"./AuthForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  const [isLogin, setIsLogin] = useState(true);\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value; // optimal: validation - napr. ze to neni prazdne a ze ma heslo vice nez 7 znaku.\n\n    setIsLoading(true); // https://firebase.google.com/docs/reference/rest/auth - odsud vezmeme to url.\n\n    if (isLogin) {} else {\n      // tohle je general code (pro: Sign up with email / password). musime tam pridat vlastni API key: https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=[API_KEY]\n      // ten ziskame v project overview => projest settings => web api key\n      fetch(\"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCfsJzs1I0jGRRPaeZaqOZPaoVGsHngqxc\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          // request body payload je tam taky popsany.\n          email: enteredEmail,\n          password: enteredPassword,\n          returnSecureToken: true\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        setIsLoading(false);\n\n        if (res.ok) {} else {\n          return res.json().then(data => {\n            //console.log(data)\n            // napr. kdyz pri sign upovani (tedy vytvareni noveho uctu) zadame jen ctyrmistne heslo,\n            // tak se v konzoli zobrazi error => weak password. password should be at least 6 characters long.\n            let errorMessage = 'Authentication failed!';\n\n            if (data && data.error && data.error.message) {\n              errorMessage = data.error.message;\n            }\n\n            alert(errorMessage);\n          });\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? \"Login\" : \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          ref: emailInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          required: true,\n          ref: passwordInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [!isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? \"Login\" : \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 26\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Sending request...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? \"Create new account\" : \"Login with existing account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthForm, \"f8sn4/BW6epnaTsPtgfTguM/ZYk=\");\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["D:/Helena/IT/React/ReactKurzComplete/authentication/authentication/01-starting-project/src/components/Auth/AuthForm.js"],"names":["useState","useRef","classes","AuthForm","isLogin","setIsLogin","emailInputRef","passwordInputRef","isLoading","setIsLoading","switchAuthModeHandler","prevState","submitHandler","event","preventDefault","enteredEmail","current","value","enteredPassword","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","res","ok","json","data","errorMessage","error","message","alert","auth","control","actions","toggle"],"mappings":"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","sourcesContent":["import { useState, useRef } from \"react\";\n\nimport classes from \"./AuthForm.module.css\";\n\nconst AuthForm = () => {\n  const [isLogin, setIsLogin] = useState(true);\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const [isLoading,setIsLoading]=useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n    // optimal: validation - napr. ze to neni prazdne a ze ma heslo vice nez 7 znaku.\n\n    setIsLoading(true);\n\n    // https://firebase.google.com/docs/reference/rest/auth - odsud vezmeme to url.\n    if (isLogin) {\n    } else {\n      // tohle je general code (pro: Sign up with email / password). musime tam pridat vlastni API key: https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=[API_KEY]\n      // ten ziskame v project overview => projest settings => web api key\n      fetch(\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCfsJzs1I0jGRRPaeZaqOZPaoVGsHngqxc\",\n        {\n          method: \"POST\",\n          body: JSON.stringify({\n            // request body payload je tam taky popsany.\n            email: enteredEmail,\n            password: enteredPassword,\n            returnSecureToken: true,\n          }),\n          headers: { \"Content-Type\": \"application/json\" },\n        }\n      ).then(res=>{\n        setIsLoading(false);\n        if (res.ok) {\n\n        } else {\n          return res.json().then(data=> {\n            //console.log(data)\n            // napr. kdyz pri sign upovani (tedy vytvareni noveho uctu) zadame jen ctyrmistne heslo,\n            // tak se v konzoli zobrazi error => weak password. password should be at least 6 characters long.\n            let errorMessage = 'Authentication failed!';\n            if (data && data.error && data.error.message) {\n              errorMessage = data.error.message;\n            }\n            alert(errorMessage);\n            \n          })\n        }\n      })\n    }\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input type=\"email\" id=\"email\" required ref={emailInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            required\n            ref={passwordInputRef}\n          />\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && <button>{isLogin ? \"Login\" : \"Create Account\"}</button>}\n          {isLoading && <p>Sending request...</p>}\n          <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n"]},"metadata":{},"sourceType":"module"}